#pragma checksum "C:\Users\AJack Ti\Documents\GitHub\Project-Monitor-Baby\WebApp\WebApp\Views\Home\Dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ab1c0df380fc814888ea37df7ad03eefc8addd3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Dashboard), @"mvc.1.0.view", @"/Views/Home/Dashboard.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Dashboard.cshtml", typeof(AspNetCore.Views_Home_Dashboard))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\AJack Ti\Documents\GitHub\Project-Monitor-Baby\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#line 2 "C:\Users\AJack Ti\Documents\GitHub\Project-Monitor-Baby\WebApp\WebApp\Views\_ViewImports.cshtml"
using WebApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ab1c0df380fc814888ea37df7ad03eefc8addd3", @"/Views/Home/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc48f17eb9bac3476d8060730298bf398eb2fa5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("icon"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("~/image/png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/img/favicon.ico"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/animate.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/light-bootstrap-dashboard.css?v=1.4.0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/pe-icon-7-stroke.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/table.html"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/typography.html"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/icons.html"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/jquery.3.2.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/bootstrap.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/chartist.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/bootstrap-notify.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/light-bootstrap-dashboard.js?v=1.4.0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\AJack Ti\Documents\GitHub\Project-Monitor-Baby\WebApp\WebApp\Views\Home\Dashboard.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(27, 37, true);
            WriteLiteral("\r\n<!doctype html>\r\n<html lang=\"en\">\r\n");
            EndContext();
            BeginContext(64, 2413, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd310641", async() => {
                BeginContext(70, 36, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    ");
                EndContext();
                BeginContext(106, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "1ab1c0df380fc814888ea37df7ad03eefc8addd311061", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(174, 427, true);
                WriteLiteral(@"
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1"" />
    <meta http-equiv=""Content-Security-Policy"" content=""upgrade-insecure-requests"">
    <title>Management Project Smart Baby</title>

    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name=""viewport"" content=""width=device-width"" />


    <!-- Bootstrap core CSS     -->
    ");
                EndContext();
                BeginContext(601, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ab1c0df380fc814888ea37df7ad03eefc8addd312916", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(664, 60, true);
                WriteLiteral("\r\n\r\n    <!-- Animation library for notifications   -->\r\n    ");
                EndContext();
                BeginContext(724, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ab1c0df380fc814888ea37df7ad03eefc8addd314308", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(785, 57, true);
                WriteLiteral("\r\n\r\n    <!--  Light Bootstrap Table core CSS    -->\r\n    ");
                EndContext();
                BeginContext(842, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ab1c0df380fc814888ea37df7ad03eefc8addd315697", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(925, 84, true);
                WriteLiteral("\r\n\r\n\r\n    <!--  CSS for Demo Purpose, don\'t include it in your project     -->\r\n    ");
                EndContext();
                BeginContext(1009, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ab1c0df380fc814888ea37df7ad03eefc8addd317117", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1063, 267, true);
                WriteLiteral(@"

    <!--     Fonts and icons     -->
    <link href=""http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>
    ");
                EndContext();
                BeginContext(1330, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ab1c0df380fc814888ea37df7ad03eefc8addd318718", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1396, 1074, true);
                WriteLiteral(@"

    <script src=""https://code.highcharts.com/highcharts.js""></script>
    <script src=""https://code.highcharts.com/modules/series-label.js""></script>
    <script src=""https://code.highcharts.com/modules/exporting.js""></script>
    <script src=""https://code.highcharts.com/modules/export-data.js""></script>

    <base href=""https://demos.telerik.com/kendo-ui/datetimepicker/index"">
    <style>
        html {
            font-size: 14px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link rel=""stylesheet"" href=""https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.common-material.min.css"" />
    <link rel=""stylesheet"" href=""https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.material.min.css"" />
    <link rel=""stylesheet"" href=""https://kendo.cdn.telerik.com/2019.1.220/styles/kendo.material.mobile.min.css"" />

    <script src=""https://kendo.cdn.telerik.com/2019.1.220/js/jquery.min.js""></script>
    <script src=""https://kendo.cdn.telerik");
                WriteLiteral(".com/2019.1.220/js/kendo.all.min.js\"></script>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2477, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2479, 35597, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd321991", async() => {
                BeginContext(2485, 1056, true);
                WriteLiteral(@"

    <div class=""wrapper"">
        <div class=""sidebar"" data-color=""purple"" data-image=""/assets/img/sidebar-5.jpg"">

            <div class=""sidebar-wrapper"">
                <div class=""logo"">

                    <div class=""logo"">
                        <a target=""_blank"" href=""https://github.com/AjackTi/Project-Monitor-Baby"" class=""simple-text"">
                            TEAM 4
                        </a>
                    </div>
                </div>

                <ul class=""nav"">
                    <li class=""active"">
                        <a href=/Home/Dashboard"">
                            <i class=""pe-7s-graph""></i>
                            <p>Dashboard</p>
                        </a>
                    </li>
                    <li>
                        <a href=""~/user.html"">
                            <i class=""pe-7s-user""></i>
                            <p>User Profile</p>
                        </a>
                    </li>
                  ");
                WriteLiteral("  <li>\r\n                        ");
                EndContext();
                BeginContext(3541, 153, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd323500", async() => {
                    BeginContext(3564, 126, true);
                    WriteLiteral("\r\n                            <i class=\"pe-7s-note2\"></i>\r\n                            <p>Advice</p>\r\n                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3694, 79, true);
                WriteLiteral("\r\n                    </li>\r\n                    <li>\r\n                        ");
                EndContext();
                BeginContext(3773, 164, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd325090", async() => {
                    BeginContext(3801, 132, true);
                    WriteLiteral("\r\n                            <i class=\"pe-7s-camera\"></i>\r\n                            <p>Live Camera</p>\r\n                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3937, 79, true);
                WriteLiteral("\r\n                    </li>\r\n                    <li>\r\n                        ");
                EndContext();
                BeginContext(4016, 158, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd326687", async() => {
                    BeginContext(4039, 131, true);
                    WriteLiteral("\r\n                            <i class=\"pe-7s-refresh\"></i>\r\n                            <p>Transform</p>\r\n                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4174, 33895, true);
                WriteLiteral(@"
                    </li>
                    <li>
                        <a href=""notifications.html"">
                            <i class=""pe-7s-bell""></i>
                            <p>Notifications</p>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <div class=""main-panel"">
            <nav class=""navbar navbar-default navbar-fixed"">
                <div class=""container-fluid"">
                    <div class=""navbar-header"">
                        <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target=""#navigation-example-2"">
                            <span class=""sr-only"">Toggle navigation</span>
                            <span class=""icon-bar""></span>
                            <span class=""icon-bar""></span>
                            <span class=""icon-bar""></span>
                        </button>
                        <a class=""navbar-brand"" href=""#"">Dashboard</a>
      ");
                WriteLiteral(@"              </div>
                    <div class=""collapse navbar-collapse"">
                        <ul class=""nav navbar-nav navbar-left"">
                            <li>
                                <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">
                                    <i class=""fa fa-dashboard""></i>
                                    <p class=""hidden-lg hidden-md"">Dashboard</p>
                                </a>
                            </li>
                            <li class=""dropdown"">
                                <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">
                                    <i class=""fa fa-globe""></i>
                                    <b class=""caret hidden-lg hidden-md""></b>
                                    <p class=""hidden-lg hidden-md"">
                                        5 Notifications
                                        <b class=""caret""></b>
                                    </p>
       ");
                WriteLiteral(@"                         </a>
                                <ul class=""dropdown-menu"">
                                    <li><a href=""#"">Notification 1</a></li>
                                    <li><a href=""#"">Notification 2</a></li>
                                    <li><a href=""#"">Notification 3</a></li>
                                    <li><a href=""#"">Notification 4</a></li>
                                    <li><a href=""#"">Another notification</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href="""">
                                    <i class=""fa fa-search""></i>
                                    <p class=""hidden-lg hidden-md"">Search</p>
                                </a>
                            </li>
                        </ul>

                        <ul class=""nav navbar-nav navbar-right"">
                            <li class=""dropdown"">
                     ");
                WriteLiteral(@"           <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">
                                    <p>
                                        Dropdown
                                        <b class=""caret""></b>
                                    </p>

                                </a>
                                <ul class=""dropdown-menu"">
                                    <li><a href=""#"">Action</a></li>
                                    <li><a href=""#"">Another action</a></li>
                                    <li><a href=""#"">Something</a></li>
                                    <li><a href=""#"">Another action</a></li>
                                    <li><a href=""#"">Something</a></li>
                                    <li class=""divider""></li>
                                    <li><a href=""#"">Separated link</a></li>
                                </ul>
                            </li>
                            <li>
                                <a href=""");
                WriteLiteral(@"#"">
                                    <p>Log out</p>
                                </a>
                            </li>
                            <li class=""separator hidden-lg""></li>
                        </ul>
                    </div>
                </div>
            </nav>


            <div class=""content"">
                <div class=""container-fluid"">
                    <div class=""row"">
                        <div class=""col-md-4"" style=""width: 353px;"">
                            <div class=""card"">

                                <div class=""header"">
                                    <h4 class=""title"">Motion Chart</h4>
                                    <p class=""category"">Motion Detection</p>
                                </div>
                                <div class=""content"" style=""height: 466px;"">
                                    <div id=""motionChart""></div>
                                    <div id=""example"">

                                ");
                WriteLiteral(@"        <div class=""demo-section k-content"">
                                            <input id=""datetimepickerMotion"" title=""datetimepickerMotion"" style=""width: 100%;"" />
                                        </div>

                                        <script>
                                            $(document).ready(function () {
                                                // create DateTimePicker from input HTML element
                                                $(""#datetimepickerMotion"").kendoDateTimePicker({
                                                    value: new Date(),
                                                    dateInput: true
                                                });
                                                $(""#datetimepickerMotion"").change(function () {
                                                    $.ajax({
                                                        type: 'GET',
                                                   ");
                WriteLiteral(@"     dataType: 'json',
                                                        cache: false,
                                                        url: 'https://192.168.1.7:5002/api/cameras',
                                                        contentType: 'application/json; charset=utf-8',
                                                        success: function (result) {
                                                            console.log(result);
                                                            setupMotionChart();
                                                        },
                                                        error: function (result) {
                                                            console.log(result);
                                                        }
                                                    })
                                                    var startDate = kendo.toString($(""#datetimepickerMotion"").data(""kendoDateTimePic");
                WriteLiteral(@"ker"").value(), 'MM/dd/yyyy');
                                                    var startTime = kendo.toString($(""#datetimepickerMotion"").data(""kendoDateTimePicker"").value(), 'hh:mm tt');
                                                    console.log(startDate, startTime);
                                                })

                                                //var endtDate = kendo.toString($(""#endDate"").data(""kendoDateTimePicker"").value(), 'MM/dd/yyyy');
                                                //var endTime = kendo.toString($(""#endDate"").data(""kendoDateTimePicker"").value(), 'hh:mm tt')
                                            });
                                        </script>

                                    </div>
                                    <script>
                                        function setupMotionChart() {
                                            // Set up the chart
                                            var chart = new Highcharts.C");
                WriteLiteral(@"hart({
                                                chart: {
                                                    renderTo: 'motionChart',
                                                    type: 'column',
                                                    options3d: {
                                                        enabled: true,
                                                        alpha: 15,
                                                        beta: 15,
                                                        depth: 50,
                                                        viewDistance: 25
                                                    }
                                                },
                                                title: {
                                                    text: 'Chart rotation demo'
                                                },
                                                subtitle: {
                                     ");
                WriteLiteral(@"               text: 'Test options by dragging the sliders below'
                                                },
                                                plotOptions: {
                                                    column: {
                                                        depth: 25
                                                    }
                                                },
                                                series: [{
                                                    data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]
                                                }]
                                            });

                                            function showValues() {
                                                $('#alpha-value').html(chart.options.chart.options3d.alpha);
                                                $('#beta-value').html(chart.options.chart.options3d.beta);
              ");
                WriteLiteral(@"                                  $('#depth-value').html(chart.options.chart.options3d.depth);
                                            }

                                            // Activate the sliders
                                            $('#sliders input').on('input change', function () {
                                                chart.options.chart.options3d[this.id] = parseFloat(this.value);
                                                showValues();
                                                chart.redraw(false);
                                            });

                                            showValues();
                                        }

                                    </script>
                                </div>
                            </div>
                        </div>

                        <div class=""col-md-8"">
                            <div class=""card"">
                                <div class=""header"">
   ");
                WriteLiteral(@"                                 <h4 class=""title"">Camera Chart</h4>
                                    <p class=""category"">Camera Detect Motion Analysic</p>
                                </div>
                                <div class=""content"">
                                    <div id=""cameraChart""></div>

                                    <div id=""example"">

                                        <div class=""demo-section k-content"">
                                            <div style=""display: inline-block; width: 100%"">
                                                <input id=""datetimepickerCamera1"" title=""datetimepickerCamera1"" style=""width: 50%; float: left;"" />
                                                <input id=""datetimepickerCamera2"" title=""datetimepickerCamera2"" style=""width: 50%; float: right;"" />
                                            </div>
                                        </div>

                                        <script>
                   ");
                WriteLiteral(@"                         $(document).ready(function () {
                                                // create DateTimePicker from input HTML element
                                                $(""#datetimepickerCamera1"").kendoDateTimePicker({
                                                    value: new Date(),
                                                    dateInput: true
                                                });
                                                $(""#datetimepickerCamera2"").kendoDateTimePicker({
                                                    value: new Date(),
                                                    dateInput: true
                                                });
                                            });
                                        </script>

                                    </div>

                                    <script>
                                        Highcharts.chart('cameraChart', {
             ");
                WriteLiteral(@"                               chart: {
                                                zoomType: 'xy'
                                            },
                                            title: {
                                                text: 'Average Monthly Temperature and Rainfall in Tokyo'
                                            },
                                            subtitle: {
                                                text: 'Source: WorldClimate.com'
                                            },
                                            xAxis: [{
                                                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                                                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                                crosshair: true
                                            }],
                                            yAxis: [{ // Primary yAxis
                                  ");
                WriteLiteral(@"              labels: {
                                                    format: '{value}°C',
                                                    style: {
                                                        color: Highcharts.getOptions().colors[1]
                                                    }
                                                },
                                                title: {
                                                    text: 'Temperature',
                                                    style: {
                                                        color: Highcharts.getOptions().colors[1]
                                                    }
                                                }
                                            }, { // Secondary yAxis
                                                title: {
                                                    text: 'Rainfall',
                                                    style: {
");
                WriteLiteral(@"                                                        color: Highcharts.getOptions().colors[0]
                                                    }
                                                },
                                                labels: {
                                                    format: '{value} mm',
                                                    style: {
                                                        color: Highcharts.getOptions().colors[0]
                                                    }
                                                },
                                                opposite: true
                                            }],
                                            tooltip: {
                                                shared: true
                                            },
                                            legend: {
                                                layout: 'vertical',
               ");
                WriteLiteral(@"                                 align: 'left',
                                                x: 120,
                                                verticalAlign: 'top',
                                                y: 100,
                                                floating: true,
                                                backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || 'rgba(255,255,255,0.25)'
                                            },
                                            series: [{
                                                name: 'Rainfall',
                                                type: 'column',
                                                yAxis: 1,
                                                data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4],
                                                tooltip: {
                                                    valueSuffix: ' mm'
      ");
                WriteLiteral(@"                                          }

                                            }, {
                                                name: 'Temperature',
                                                type: 'spline',
                                                data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6],
                                                tooltip: {
                                                    valueSuffix: '°C'
                                                }
                                            }]
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class=""row"">
                        <div class=""col-md-6"">
                            <div class=""card "">
                                <div class=""header"">
             ");
                WriteLiteral(@"                       <h4 class=""title"">Sound Chart</h4>
                                    <p class=""category"">Sound Detection</p>
                                    <div id=""soundChart""></div>
                                    <div id=""example"">

                                        <div class=""demo-section k-content"">
                                            <div style=""display: inline-block; width: 100%"">
                                                <input id=""datetimepickerSound1"" title=""datetimepickerSound1"" style=""width: 50%; float: left;"" />
                                                <input id=""datetimepickerSound2"" title=""datetimepickerSound2"" style=""width: 50%; float: right;"" />
                                            </div>
                                        </div>

                                        <script>
                                            $(document).ready(function () {
                                                // create DateTimePic");
                WriteLiteral(@"ker from input HTML element
                                                $(""#datetimepickerSound1"").kendoDateTimePicker({
                                                    value: new Date(),
                                                    dateInput: true
                                                });

                                                $(""#datetimepickerSound2"").kendoDateTimePicker({
                                                    value: new Date(),
                                                    dateInput: true
                                                });
                                            });
                                        </script>

                                    </div>
                                </div>
                                <script>
                                    Highcharts.chart('soundChart', {
                                        chart: {
                                            plotBackgroundCol");
                WriteLiteral(@"or: null,
                                            plotBorderWidth: null,
                                            plotShadow: false,
                                            type: 'pie'
                                        },
                                        title: {
                                            text: 'Sound Chart Between '
                                        },
                                        tooltip: {
                                            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                                        },
                                        plotOptions: {
                                            pie: {
                                                allowPointSelect: true,
                                                cursor: 'pointer',
                                                dataLabels: {
                                                    enabled: true,
                              ");
                WriteLiteral(@"                      format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                                                    style: {
                                                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                                                    }
                                                }
                                            }
                                        },
                                        series: [{
                                            name: 'Brands',
                                            colorByPoint: true,
                                            data: [{
                                                name: 'Chrome',
                                                y: 61.41,
                                                sliced: true,
                                                selected: true
                                            }, {
                    ");
                WriteLiteral(@"                            name: 'Internet Explorer',
                                                y: 11.84
                                            }, {
                                                name: 'Firefox',
                                                y: 10.85
                                            }, {
                                                name: 'Edge',
                                                y: 4.67
                                            }, {
                                                name: 'Safari',
                                                y: 4.18
                                            }, {
                                                name: 'Sogou Explorer',
                                                y: 1.64
                                            }, {
                                                name: 'Opera',
                                                y: 1.6
                                            ");
                WriteLiteral(@"}, {
                                                name: 'QQ',
                                                y: 1.2
                                            }, {
                                                name: 'Other',
                                                y: 2.61
                                            }]
                                        }]
                                    });
                                </script>
                            </div>
                        </div>

                        <div class=""col-md-6"">
                            <div class=""card "">
                                <div class=""header"">
                                    <h4 class=""title"">Advice For Parents with My Baby</h4>
                                </div>
                                <div class=""content"" style=""height: 462px"">
                                    <div class=""table-full-width"">
                                        <table class=""ta");
                WriteLiteral(@"ble"">
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox1"" type=""checkbox"">
                                                            <label for=""checkbox1""></label>
                                                        </div>
                                                    </td>
                                                    <td>Understanding Baby Sleep Music</td>
                                                    <td class=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
                                                            <i class=""fa fa-eye ui-content"" role=""main""> <a href=""#"" class=""");
                WriteLiteral(@"ui-btn ui-btn-b ui-btn-icon-left ui-icon-info ui-corner-all"" id=""foo""></a></i>
                                                        </button>
                                                        <button type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox2"" type=""checkbox"" checked>
                                                            <label for=""checkbox2""></label>
                                                        </div>
");
                WriteLiteral(@"                                                    </td>
                                                    <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>
                                                    <td class=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
                                                            <i class=""fa fa-eye""></i>
                                                        </button>
                                                        <button type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                            ");
                WriteLiteral(@"                    <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox3"" type=""checkbox"">
                                                            <label for=""checkbox3""></label>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit
                                                    </td>
                                                    <td class=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
              ");
                WriteLiteral(@"                                              <i class=""fa fa-eye""></i>
                                                        </button>
                                                        <button type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox4"" type=""checkbox"" checked>
                                                            <label for=""checkbox4""></label>
                                                        </div>
       ");
                WriteLiteral(@"                                             </td>
                                                    <td>Create 4 Invisible User Experiences you Never Knew About</td>
                                                    <td class=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
                                                            <i class=""fa fa-eye""></i>
                                                        </button>
                                                        <button type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                        ");
                WriteLiteral(@"        <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox5"" type=""checkbox"">
                                                            <label for=""checkbox5""></label>
                                                        </div>
                                                    </td>
                                                    <td>Read ""Following makes Medium better""</td>
                                                    <td class=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
                                                            <i class=""fa fa-eye""></i>
                                                        </button>
                                                        <button ");
                WriteLiteral(@"type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <div class=""checkbox"">
                                                            <input id=""checkbox6"" type=""checkbox"" checked>
                                                            <label for=""checkbox6""></label>
                                                        </div>
                                                    </td>
                                                    <td>Unfollow 5 enemies from twitter</td>
                                                    <td cl");
                WriteLiteral(@"ass=""td-actions text-right"">
                                                        <button type=""button"" rel=""tooltip"" title=""Edit Task"" class=""btn btn-info btn-simple btn-xs"">
                                                            <i class=""fa fa-eye""></i>
                                                        </button>
                                                        <button type=""button"" rel=""tooltip"" title=""Remove"" class=""btn btn-danger btn-simple btn-xs"">
                                                            <i class=""fa fa-times""></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
             ");
                WriteLiteral("       </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38076, 32, true);
            WriteLiteral("\r\n\r\n<!--   Core JS Files   -->\r\n");
            EndContext();
            BeginContext(38108, 78, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd364580", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38186, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(38188, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd365847", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38263, 29, true);
            WriteLiteral("\r\n\r\n<!--  Charts Plugin -->\r\n");
            EndContext();
            BeginContext(38292, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd367146", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38343, 39, true);
            WriteLiteral("\r\n\r\n<!--  Notifications Plugin    -->\r\n");
            EndContext();
            BeginContext(38382, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd368371", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38437, 248, true);
            WriteLiteral("\r\n\r\n<!--  Google Maps Plugin    -->\r\n<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCdanJlxl4OLIxvUC5IXfH2E-rYKuROMwU\"></script>\r\n\r\n<!-- Light Bootstrap Table Core javascript and methods for Demo purpose -->\r\n");
            EndContext();
            BeginContext(38685, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd369816", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38757, 84, true);
            WriteLiteral("\r\n\r\n<!-- Light Bootstrap Table DEMO methods, don\'t include it in your project! -->\r\n");
            EndContext();
            BeginContext(38841, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ab1c0df380fc814888ea37df7ad03eefc8addd371087", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(38884, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
